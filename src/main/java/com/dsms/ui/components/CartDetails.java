/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dsms.ui.components;

import com.dsms.beans.ContextProvider;
import com.dsms.beans.EventPublisherService;
import com.dsms.controller.OrderController;
import com.dsms.controller.UserController;
import com.dsms.db.entity.CartItem;
import com.dsms.db.entity.UserEntity;
import com.dsms.ui.event.model.NavigateEvent;
import java.awt.Dimension;
import java.util.List;
import javax.swing.Box;
import javax.swing.JLabel;
import javax.swing.JSeparator;
import javax.swing.SwingConstants;
import lombok.extern.slf4j.Slf4j;

/**
 *
 * @author Mahaj
 */
@Slf4j
public class CartDetails extends javax.swing.JPanel {

    private List<CartItem> cartItemList;
    private JLabel totalPriceLbl;
    private Box totalBox;

    public CartDetails() {
        initComponents();
    }

    public CartDetails(List<CartItem> cartItemList) {
        this.cartItemList = cartItemList;
        initComponents();
        showContent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cartReviewPanel = new javax.swing.JPanel();
        buttenPanel = new javax.swing.JPanel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        orderNowBtn = new javax.swing.JButton();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0));

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.PAGE_AXIS));

        cartReviewPanel.setLayout(new javax.swing.BoxLayout(cartReviewPanel, javax.swing.BoxLayout.PAGE_AXIS));
        add(cartReviewPanel);

        buttenPanel.setBackground(new java.awt.Color(255, 255, 255));
        buttenPanel.setMaximumSize(new java.awt.Dimension(32862, 23));
        buttenPanel.setLayout(new javax.swing.BoxLayout(buttenPanel, javax.swing.BoxLayout.LINE_AXIS));
        buttenPanel.add(filler1);

        orderNowBtn.setText("Order Now");
        orderNowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderNowBtnActionPerformed(evt);
            }
        });
        buttenPanel.add(orderNowBtn);
        buttenPanel.add(filler2);

        add(buttenPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void orderNowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderNowBtnActionPerformed
        OrderController orderController = ContextProvider.getBean(OrderController.class);
        UserController userController = ContextProvider.getBean(UserController.class);
        UserEntity userEntity = userController.getLoggedInUser();
        orderController.createOrder(userEntity, "", cartItemList);
        EventPublisherService.publishEvent(new NavigateEvent(evt.getSource(), NavigateEvent.NavigateTo.MY_ORDERS_PAGE));
    }//GEN-LAST:event_orderNowBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttenPanel;
    private javax.swing.JPanel cartReviewPanel;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JButton orderNowBtn;
    // End of variables declaration//GEN-END:variables

    private void showContent() {
        buildTotalBox();
        for (int i = 0; i < this.cartItemList.size(); i++) {
            this.cartReviewPanel.add(new CartReviewItemPane(this, i + 1, cartItemList.get(i)));
        }

        JSeparator jSeparator = new JSeparator();
        cartReviewPanel.add(jSeparator);
        cartReviewPanel.add(totalBox);
    }

    private void buildTotalBox() {
        Double totalPrice = this.cartItemList.stream().map(cartItem -> cartItem.getItemCount() * cartItem.getItemEntity().getPrice()).reduce(Double::sum).orElse(Double.NaN);
        totalBox = Box.createHorizontalBox();
        totalBox.add(Box.createHorizontalGlue());
        totalBox.add(new JLabel("Total = "));
        totalPriceLbl = new JLabel();
        totalPriceLbl.setHorizontalAlignment(SwingConstants.TRAILING);
        totalPriceLbl.setText(totalPrice.toString());
        totalPriceLbl.setMaximumSize(new Dimension(80, 14));
        totalPriceLbl.setMinimumSize(new Dimension(80, 14));
        totalPriceLbl.setPreferredSize(new Dimension(80, 14));
        totalBox.add(totalPriceLbl);
        totalBox.add(Box.createRigidArea(new Dimension(10, 0)));
    }

    void itemCountRefreshEvent() {
        Double totalPrice = this.cartItemList.stream().map(cartItem -> cartItem.getItemCount() * cartItem.getItemEntity().getPrice()).reduce(Double::sum).orElse(Double.NaN);
        totalPriceLbl.setText(String.format("%.2f", totalPrice));
    }
}
