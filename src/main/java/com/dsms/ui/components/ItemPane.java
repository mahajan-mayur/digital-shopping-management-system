/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dsms.ui.components;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

import org.kordamp.ikonli.materialdesign.MaterialDesign;

import com.dsms.beans.ContextProvider;
import com.dsms.beans.EventPublisherService;
import com.dsms.controller.CartController;
import com.dsms.controller.UserController;
import com.dsms.controller.WishlistController;
import com.dsms.db.entity.ItemEntity;
import com.dsms.db.entity.UserEntity;
import com.dsms.dto.ControllerResponse;
import com.dsms.ui.AbstractPaginatedItemListPage.ItemListPageType;
import com.dsms.ui.event.model.ItemListPageRefreshEvent;
import com.dsms.ui.event.model.NavigateEvent;
import com.dsms.util.ImageUtils;
import javax.swing.Box;
import javax.swing.SwingUtilities;

import lombok.extern.slf4j.Slf4j;

/**
 *
 * @author Mahaj
 */
@Slf4j
public class ItemPane extends javax.swing.JPanel {

    private ItemEntity itemEntity;
    private Boolean isWishlisted;
    private Boolean isAddedToCart;
    private ItemListPageType itemListPageType;

    public ItemPane(ItemEntity item, ItemListPageType itemListPageType) {
        this.itemEntity = item;
        this.isWishlisted = false;
        this.isAddedToCart = false;
        this.itemListPageType = itemListPageType;
        initComponents();

        this.itemCategory.setText(item.getItemCategory().toString());
        this.itemDescription.setText(item.getDesciption());
        this.itemName.setText(item.getName());
        this.itemPrice.setText(item.getPrice().toString());

        SwingUtilities.invokeLater(() -> {
            try {
                BufferedImage img = ImageIO.read(new File(item.getImageUrl()));
                Dimension dimension = ImageUtils.getScaledDimension(new Dimension(img.getWidth(), img.getHeight()), imagePanel.getPreferredSize());
                Image dimg = img.getScaledInstance((int) dimension.getWidth(), (int) dimension.getHeight(),
                        Image.SCALE_SMOOTH);
                this.imageLbl.setIcon(new ImageIcon(dimg));
            } catch (IOException e) {
                log.error("error in reading image : {}", item.getImageUrl());
            }
        });

        this.btnPanel.removeAll();
        this.btnPanel.add(Box.createVerticalGlue());
        switch (this.itemListPageType) {
            case HOME_PAGE:
                this.btnPanel.add(this.addToWishlistBtn);
                this.btnPanel.add(Box.createRigidArea(new Dimension(0, 10)));
                this.btnPanel.add(this.addToBagBtn);
                this.btnPanel.add(Box.createRigidArea(new Dimension(0, 10)));
                SwingUtilities.invokeLater(() -> {
                    UserController userController = ContextProvider.getBean(UserController.class);
                    UserEntity userEntity = userController.getLoggedInUser();
                    if (userEntity != null) {
                        handleWishlisted(ContextProvider.getBean(WishlistController.class).isWishlisted(userEntity, itemEntity));
                        handleAddedToBag(ContextProvider.getBean(CartController.class).isAddedToCart(userEntity, itemEntity));
                    }
                });
                break;
            case WISHLIST_PAGE:
                this.removeBtn.setIkon(MaterialDesign.MDI_BOOKMARK_REMOVE);
                this.btnPanel.add(this.removeBtn);
                this.btnPanel.add(Box.createRigidArea(new Dimension(0, 10)));
                this.moveBtn.setText("Move to Bag");
                this.moveBtn.setIkon(MaterialDesign.MDI_CART_PLUS);
                this.btnPanel.add(this.moveBtn);
                this.btnPanel.add(Box.createRigidArea(new Dimension(0, 10)));
                break;
            case CART_PAGE:
                this.removeBtn.setIkon(MaterialDesign.MDI_CART_OFF);
                this.btnPanel.add(this.removeBtn);
                this.btnPanel.add(Box.createRigidArea(new Dimension(0, 10)));
                this.moveBtn.setText("Move to Wishlist");
                this.moveBtn.setIkon(MaterialDesign.MDI_BOOKMARK_PLUS);
                this.btnPanel.add(this.moveBtn);
                this.btnPanel.add(Box.createRigidArea(new Dimension(0, 10)));
                break;
            default:
                break;
        }

    }

    public ItemPane() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel11 = new javax.swing.JPanel();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0));
        jPanel5 = new javax.swing.JPanel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        imagePanel = new javax.swing.JPanel();
        imageLbl = new javax.swing.JLabel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0));
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        filler12 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        itemName = new javax.swing.JLabel();
        itemCategory = new javax.swing.JLabel();
        itemDescription = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        itemlabel = new javax.swing.JLabel();
        itemPrice = new javax.swing.JLabel();
        filler13 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        filler8 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        btnPanel = new javax.swing.JPanel();
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        removeBtn = new com.dsms.ui.components.SidePaneJbutton();
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10));
        moveBtn = new com.dsms.ui.components.SidePaneJbutton();
        filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10));
        addToWishlistBtn = new com.dsms.ui.components.SidePaneJbutton();
        filler10 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10));
        addToBagBtn = new com.dsms.ui.components.SidePaneJbutton();
        filler11 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10));
        filler9 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0));

        setMaximumSize(new java.awt.Dimension(65534, 32767));
        setMinimumSize(new java.awt.Dimension(0, 0));
        setPreferredSize(new java.awt.Dimension(786, 246));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jPanel11.setBackground(new java.awt.Color(36, 37, 42));
        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel11.setMaximumSize(new java.awt.Dimension(65534, 32767));
        jPanel11.setPreferredSize(new java.awt.Dimension(1024, 224));
        jPanel11.setLayout(new javax.swing.BoxLayout(jPanel11, javax.swing.BoxLayout.LINE_AXIS));
        jPanel11.add(filler3);

        jPanel5.setOpaque(false);
        jPanel5.setPreferredSize(new java.awt.Dimension(240, 135));
        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.PAGE_AXIS));
        jPanel5.add(filler1);

        imagePanel.setBackground(new java.awt.Color(255, 255, 255));
        imagePanel.setMaximumSize(new java.awt.Dimension(240, 135));
        imagePanel.setMinimumSize(new java.awt.Dimension(240, 135));
        imagePanel.setPreferredSize(new java.awt.Dimension(240, 135));
        imagePanel.setLayout(new java.awt.BorderLayout());

        imageLbl.setBackground(new java.awt.Color(255, 255, 255));
        imageLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageLbl.setText(" ");
        imageLbl.setAlignmentX(0.5F);
        imageLbl.setMaximumSize(new java.awt.Dimension(240, 135));
        imageLbl.setMinimumSize(new java.awt.Dimension(240, 135));
        imageLbl.setPreferredSize(new java.awt.Dimension(240, 135));
        imagePanel.add(imageLbl, java.awt.BorderLayout.CENTER);

        jPanel5.add(imagePanel);
        jPanel5.add(filler2);

        jPanel11.add(jPanel5);
        jPanel11.add(filler4);

        jPanel2.setAlignmentX(0.0F);
        jPanel2.setOpaque(false);
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.PAGE_AXIS));
        jPanel3.add(filler12);

        itemName.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 36)); // NOI18N
        itemName.setForeground(new java.awt.Color(255, 255, 255));
        itemName.setText("ITEM Name");
        jPanel3.add(itemName);

        itemCategory.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 12)); // NOI18N
        itemCategory.setForeground(new java.awt.Color(189, 189, 189));
        itemCategory.setText("ITEM Category");
        jPanel3.add(itemCategory);

        itemDescription.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 12)); // NOI18N
        itemDescription.setForeground(new java.awt.Color(228, 241, 254));
        itemDescription.setText("ITEM Description");
        jPanel3.add(itemDescription);

        jPanel1.setAlignmentX(0.0F);
        jPanel1.setOpaque(false);
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        itemlabel.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 12)); // NOI18N
        itemlabel.setForeground(new java.awt.Color(228, 241, 254));
        itemlabel.setText("Price:  ");
        jPanel1.add(itemlabel);

        itemPrice.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 12)); // NOI18N
        itemPrice.setForeground(new java.awt.Color(228, 241, 254));
        itemPrice.setText("200");
        jPanel1.add(itemPrice);

        jPanel3.add(jPanel1);
        jPanel3.add(filler13);

        jPanel2.add(jPanel3);
        jPanel2.add(filler8);

        btnPanel.setOpaque(false);
        btnPanel.setLayout(new javax.swing.BoxLayout(btnPanel, javax.swing.BoxLayout.PAGE_AXIS));
        btnPanel.add(filler5);

        removeBtn.setBackground(new java.awt.Color(255, 255, 255));
        removeBtn.setText("Remove");
        removeBtn.setToolTipText("Add to Bag");
        removeBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        removeBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        removeBtn.setIconBackgroundColor(new java.awt.Color(255, 255, 255));
        removeBtn.setIconColor(new java.awt.Color(68, 138, 255));
        removeBtn.setIconTextGap(5);
        removeBtn.setIkon(MaterialDesign.MDI_CART);
        removeBtn.setOpaque(false);
        removeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeBtnMouseClicked(evt);
            }
        });
        removeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBtnActionPerformed(evt);
            }
        });
        btnPanel.add(removeBtn);
        btnPanel.add(filler6);

        moveBtn.setBackground(new java.awt.Color(255, 255, 255));
        moveBtn.setText("Move To Bag");
        moveBtn.setToolTipText("Add to Bag");
        moveBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        moveBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        moveBtn.setIconBackgroundColor(new java.awt.Color(255, 255, 255));
        moveBtn.setIconColor(new java.awt.Color(68, 138, 255));
        moveBtn.setIconTextGap(5);
        moveBtn.setIkon(MaterialDesign.MDI_CART_PLUS);
        moveBtn.setOpaque(false);
        moveBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                moveBtnMouseClicked(evt);
            }
        });
        moveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveBtnActionPerformed(evt);
            }
        });
        btnPanel.add(moveBtn);
        btnPanel.add(filler7);

        addToWishlistBtn.setBackground(new java.awt.Color(255, 255, 255));
        addToWishlistBtn.setText("Add to Wishlist");
        addToWishlistBtn.setToolTipText("Add to Wishlist");
        addToWishlistBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        addToWishlistBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        addToWishlistBtn.setIconBackgroundColor(new java.awt.Color(255, 255, 255));
        addToWishlistBtn.setIconColor(new java.awt.Color(68, 138, 255));
        addToWishlistBtn.setIconTextGap(5);
        addToWishlistBtn.setIkon(MaterialDesign.MDI_BOOKMARK);
        addToWishlistBtn.setOpaque(false);
        addToWishlistBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addToWishlistBtnMouseClicked(evt);
            }
        });
        addToWishlistBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToWishlistBtnActionPerformed(evt);
            }
        });
        btnPanel.add(addToWishlistBtn);
        btnPanel.add(filler10);

        addToBagBtn.setBackground(new java.awt.Color(255, 255, 255));
        addToBagBtn.setText("Add to Bag");
        addToBagBtn.setToolTipText("Add to Bag");
        addToBagBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        addToBagBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        addToBagBtn.setIconBackgroundColor(new java.awt.Color(255, 255, 255));
        addToBagBtn.setIconColor(new java.awt.Color(68, 138, 255));
        addToBagBtn.setIconTextGap(5);
        addToBagBtn.setIkon(MaterialDesign.MDI_CART);
        addToBagBtn.setOpaque(false);
        addToBagBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addToBagBtnMouseClicked(evt);
            }
        });
        addToBagBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToBagBtnActionPerformed(evt);
            }
        });
        btnPanel.add(addToBagBtn);
        btnPanel.add(filler11);

        jPanel2.add(btnPanel);

        jPanel11.add(jPanel2);
        jPanel11.add(filler9);

        add(jPanel11);
    }// </editor-fold>//GEN-END:initComponents

    private void addToWishlistBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToWishlistBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addToWishlistBtnActionPerformed

    private void addToBagBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToBagBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addToBagBtnActionPerformed

    private void addToBagBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToBagBtnMouseClicked
        UserController userController = ContextProvider.getBean(UserController.class);
        if (!userController.isUserLoggedIn()) {
            EventPublisherService.publishEvent(new NavigateEvent(evt.getSource(), NavigateEvent.NavigateTo.LOGIN_PAGE, NavigateEvent.NavigateTo.HOME_PAGE));
            return;
        }
        CartController cartController = ContextProvider.getBean(CartController.class);

        ControllerResponse controllerResponse = cartController.addToCart(userController.getLoggedInUser(), this.itemEntity);

        if (controllerResponse.isSuccess()) {
            handleAddedToBag(true);
            log.info(controllerResponse.getMessage());
            return;
        }
        log.error(controllerResponse.getMessage());
    }//GEN-LAST:event_addToBagBtnMouseClicked

    private void addToWishlistBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToWishlistBtnMouseClicked
        UserController userController = ContextProvider.getBean(UserController.class);
        if (!userController.isUserLoggedIn()) {
            EventPublisherService.publishEvent(new NavigateEvent(evt.getSource(), NavigateEvent.NavigateTo.LOGIN_PAGE, NavigateEvent.NavigateTo.HOME_PAGE));
            return;
        }
        WishlistController wishlistController = ContextProvider.getBean(WishlistController.class);

        ControllerResponse controllerResponse = wishlistController.addToWishlist(userController.getLoggedInUser(), this.itemEntity);

        if (controllerResponse.isSuccess()) {
            handleWishlisted(true);
            log.info(controllerResponse.getMessage());
            return;
        }
        log.error(controllerResponse.getMessage());

    }//GEN-LAST:event_addToWishlistBtnMouseClicked

    private void removeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeBtnMouseClicked
        UserController userController = ContextProvider.getBean(UserController.class);
        UserEntity userEntity = userController.getLoggedInUser();
        if (this.itemListPageType.equals(ItemListPageType.WISHLIST_PAGE)) {
            WishlistController wishlistController = ContextProvider.getBean(WishlistController.class);
            wishlistController.remove(userEntity, this.itemEntity);
        } else if (this.itemListPageType.equals(ItemListPageType.CART_PAGE)) {
            CartController cartController = ContextProvider.getBean(CartController.class);
            cartController.remove(userEntity, this.itemEntity);
        }
        EventPublisherService.publishEvent(new ItemListPageRefreshEvent(this));
    }//GEN-LAST:event_removeBtnMouseClicked

    private void removeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_removeBtnActionPerformed

    private void moveBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveBtnMouseClicked
        UserController userController = ContextProvider.getBean(UserController.class);
        WishlistController wishlistController = ContextProvider.getBean(WishlistController.class);
        CartController cartController = ContextProvider.getBean(CartController.class);
        UserEntity userEntity = userController.getLoggedInUser();
        if (this.itemListPageType.equals(ItemListPageType.WISHLIST_PAGE)) {
            wishlistController.remove(userEntity, this.itemEntity);
            cartController.addToCart(userEntity, this.itemEntity);
        } else if (this.itemListPageType.equals(ItemListPageType.CART_PAGE)) {
            cartController.remove(userEntity, this.itemEntity);
            wishlistController.addToWishlist(userEntity, this.itemEntity);            
        }
        EventPublisherService.publishEvent(new ItemListPageRefreshEvent(this));
    }//GEN-LAST:event_moveBtnMouseClicked

    private void moveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_moveBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.dsms.ui.components.SidePaneJbutton addToBagBtn;
    private com.dsms.ui.components.SidePaneJbutton addToWishlistBtn;
    private javax.swing.JPanel btnPanel;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler10;
    private javax.swing.Box.Filler filler11;
    private javax.swing.Box.Filler filler12;
    private javax.swing.Box.Filler filler13;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.Box.Filler filler7;
    private javax.swing.Box.Filler filler8;
    private javax.swing.Box.Filler filler9;
    private javax.swing.JLabel imageLbl;
    private javax.swing.JPanel imagePanel;
    private javax.swing.JLabel itemCategory;
    private javax.swing.JLabel itemDescription;
    private javax.swing.JLabel itemName;
    private javax.swing.JLabel itemPrice;
    private javax.swing.JLabel itemlabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private com.dsms.ui.components.SidePaneJbutton moveBtn;
    private com.dsms.ui.components.SidePaneJbutton removeBtn;
    // End of variables declaration//GEN-END:variables

    private void handleAddedToBag(Boolean isAddedToBag) {
        if (isAddedToBag) {
            this.isAddedToCart = true;
            addToBagBtn.setText("Added to Bag");
            addToBagBtn.setEnabled(false);

        } else {
            this.isAddedToCart = false;
            addToBagBtn.setText("Add to Bag");
            addToBagBtn.setEnabled(true);
        }
    }

    private void handleWishlisted(Boolean isWishlisted) {
        if (isWishlisted) {
            this.isWishlisted = true;
            addToWishlistBtn.setText("Added to WishList");
            addToWishlistBtn.setEnabled(false);

        } else {
            this.isWishlisted = false;
            addToWishlistBtn.setText("Add to WishList");
            addToWishlistBtn.setEnabled(true);
        }
    }

}
