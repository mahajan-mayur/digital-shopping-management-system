/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dsms.ui.components;

import com.dsms.beans.ContextProvider;
import com.dsms.beans.EventPublisherService;
import com.dsms.controller.UserController;
import com.dsms.dto.ControllerResponse;
import com.dsms.enums.UserType;
import com.dsms.ui.event.UserEventListner;
import com.dsms.ui.event.model.NavigateEvent;
import com.dsms.ui.event.model.NavigateEvent.NavigateTo;
import com.dsms.ui.event.model.UserActionEvent;
import java.util.EventObject;
import lombok.extern.slf4j.Slf4j;
import org.kordamp.ikonli.materialdesign.MaterialDesign;

/**
 *
 * @author Mahaj
 */
@Slf4j
public class SidePane extends javax.swing.JPanel {

   

    /**
     * Creates new form SidePane
     */
    public SidePane() {
        initComponents();
        EventPublisherService.addEventListner(new UserEventListnerImpl());
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagePanel1 = new com.dsms.ui.components.ImagePanel();
        jSeparator1 = new javax.swing.JSeparator();
        homeBtn = new com.dsms.ui.components.SidePaneJbutton();
        loginBtn = new com.dsms.ui.components.SidePaneJbutton();
        myAccountBtn = new com.dsms.ui.components.SidePaneJbutton();
        wishlistBtn = new com.dsms.ui.components.SidePaneJbutton();
        ordersBtn = new com.dsms.ui.components.SidePaneJbutton();
        contactUsBtn = new com.dsms.ui.components.SidePaneJbutton();
        aboutUsBtn = new com.dsms.ui.components.SidePaneJbutton();

        setBackground(new java.awt.Color(54, 33, 89));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout imagePanel1Layout = new javax.swing.GroupLayout(imagePanel1);
        imagePanel1.setLayout(imagePanel1Layout);
        imagePanel1Layout.setHorizontalGroup(
            imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        imagePanel1Layout.setVerticalGroup(
            imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        add(imagePanel1);
        add(jSeparator1);

        homeBtn.setText("Home");
        homeBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        homeBtn.setIconBackgroundColor(new java.awt.Color(0, 204, 102));
        homeBtn.setIconColor(new java.awt.Color(255, 255, 255));
        homeBtn.setIconTextGap(5);
        homeBtn.setIkon(MaterialDesign.MDI_HOME);
        homeBtn.setPreferredSize(new java.awt.Dimension(150, 30));
        homeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeBtnMouseClicked(evt);
            }
        });
        homeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtnActionPerformed(evt);
            }
        });
        add(homeBtn);

        loginBtn.setText("Login");
        loginBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        loginBtn.setIconBackgroundColor(new java.awt.Color(0, 204, 102));
        loginBtn.setIconColor(new java.awt.Color(255, 255, 255));
        loginBtn.setIconTextGap(5);
        loginBtn.setIkon(MaterialDesign.MDI_LOGIN);
        loginBtn.setPreferredSize(new java.awt.Dimension(150, 30));
        loginBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginBtnMouseClicked(evt);
            }
        });
        add(loginBtn);

        myAccountBtn.setText("My Account");
        myAccountBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        myAccountBtn.setIconBackgroundColor(new java.awt.Color(0, 204, 102));
        myAccountBtn.setIconColor(new java.awt.Color(255, 255, 255));
        myAccountBtn.setIconTextGap(5);
        myAccountBtn.setIkon(MaterialDesign.MDI_ACCOUNT);
        myAccountBtn.setPreferredSize(new java.awt.Dimension(150, 30));
        myAccountBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                myAccountBtnMouseClicked(evt);
            }
        });
        add(myAccountBtn);

        wishlistBtn.setText("Wishlist");
        wishlistBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        wishlistBtn.setIconBackgroundColor(new java.awt.Color(0, 204, 102));
        wishlistBtn.setIconColor(new java.awt.Color(255, 255, 255));
        wishlistBtn.setIconTextGap(5);
        wishlistBtn.setIkon(MaterialDesign.MDI_BOOKMARK_PLUS);
        wishlistBtn.setPreferredSize(new java.awt.Dimension(150, 30));
        wishlistBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                wishlistBtnMouseClicked(evt);
            }
        });
        add(wishlistBtn);

        ordersBtn.setText("Orders");
        ordersBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ordersBtn.setIconBackgroundColor(new java.awt.Color(0, 204, 102));
        ordersBtn.setIconColor(new java.awt.Color(255, 255, 255));
        ordersBtn.setIconTextGap(5);
        ordersBtn.setIkon(MaterialDesign.MDI_RECEIPT);
        ordersBtn.setPreferredSize(new java.awt.Dimension(150, 30));
        ordersBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ordersBtnMouseClicked(evt);
            }
        });
        add(ordersBtn);

        contactUsBtn.setText("Contact US");
        contactUsBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        contactUsBtn.setIconBackgroundColor(new java.awt.Color(0, 204, 102));
        contactUsBtn.setIconColor(new java.awt.Color(255, 255, 255));
        contactUsBtn.setIconTextGap(5);
        contactUsBtn.setIkon(MaterialDesign.MDI_PHONE);
        contactUsBtn.setPreferredSize(new java.awt.Dimension(150, 30));
        contactUsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contactUsBtnMouseClicked(evt);
            }
        });
        add(contactUsBtn);

        aboutUsBtn.setText("About Us");
        aboutUsBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        aboutUsBtn.setIconBackgroundColor(new java.awt.Color(0, 204, 102));
        aboutUsBtn.setIconColor(new java.awt.Color(255, 255, 255));
        aboutUsBtn.setIconTextGap(5);
        aboutUsBtn.setIkon(MaterialDesign.MDI_INFORMATION_VARIANT);
        aboutUsBtn.setPreferredSize(new java.awt.Dimension(150, 30));
        aboutUsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutUsBtnMouseClicked(evt);
            }
        });
        add(aboutUsBtn);
    }// </editor-fold>//GEN-END:initComponents

    private void homeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeBtnMouseClicked
        EventPublisherService.publishEvent(new NavigateEvent(evt.getSource(), NavigateTo.HOME_PAGE));

    }//GEN-LAST:event_homeBtnMouseClicked

    private void loginBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginBtnMouseClicked
        // TODO add your handling code here:
        UserController userController = ContextProvider.getBean(UserController.class);
        if (userController.isUserLoggedIn()) {
            log.info("logging oout user");
            ControllerResponse response = userController.logout();
            if (response.isSuccess()) {
                log.info("user Logout success !!");
                EventPublisherService.publishEvent(new UserActionEvent(evt.getSource(), UserActionEvent.EventType.LOGOUT));
            }

        }
        EventPublisherService.publishEvent(new NavigateEvent(evt.getSource(), NavigateEvent.NavigateTo.LOGIN_PAGE));
    }//GEN-LAST:event_loginBtnMouseClicked

    private void myAccountBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myAccountBtnMouseClicked
         UserController userController = ContextProvider.getBean(UserController.class);
        if (userController.isUserLoggedIn()) {
            EventPublisherService.publishEvent(new NavigateEvent(evt.getSource(), NavigateTo.MY_ACCOUNT_PAGE));
        } else {
            EventPublisherService.publishEvent(new NavigateEvent(evt.getSource(), NavigateTo.LOGIN_PAGE, NavigateTo.MY_ACCOUNT_PAGE));
        }

    }//GEN-LAST:event_myAccountBtnMouseClicked

    private void wishlistBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wishlistBtnMouseClicked
 UserController userController = ContextProvider.getBean(UserController.class);
        if (userController.isUserLoggedIn()) {
            EventPublisherService.publishEvent(new NavigateEvent(evt.getSource(), NavigateTo.WISHLIST_PAGE));
        } else {
            EventPublisherService.publishEvent(new NavigateEvent(evt.getSource(), NavigateTo.LOGIN_PAGE, NavigateTo.WISHLIST_PAGE));
        }
    }//GEN-LAST:event_wishlistBtnMouseClicked

    private void ordersBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ordersBtnMouseClicked
 UserController userController = ContextProvider.getBean(UserController.class);
        if (userController.isUserLoggedIn()) {
            EventPublisherService.publishEvent(new NavigateEvent(evt.getSource(), NavigateTo.MY_ORDERS_PAGE));
        } else {
            EventPublisherService.publishEvent(new NavigateEvent(evt.getSource(), NavigateTo.LOGIN_PAGE, NavigateTo.MY_ORDERS_PAGE));
        }
    }//GEN-LAST:event_ordersBtnMouseClicked

    private void contactUsBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contactUsBtnMouseClicked
        EventPublisherService.publishEvent(new NavigateEvent(evt.getSource(), NavigateEvent.NavigateTo.CONTACT_US_PAGE));
    }//GEN-LAST:event_contactUsBtnMouseClicked

    private void aboutUsBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutUsBtnMouseClicked
        EventPublisherService.publishEvent(new NavigateEvent(evt.getSource(), NavigateEvent.NavigateTo.ABOUT_US_PAGE));
    }//GEN-LAST:event_aboutUsBtnMouseClicked

    private void homeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_homeBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.dsms.ui.components.SidePaneJbutton aboutUsBtn;
    private com.dsms.ui.components.SidePaneJbutton contactUsBtn;
    private com.dsms.ui.components.SidePaneJbutton homeBtn;
    private com.dsms.ui.components.ImagePanel imagePanel1;
    private javax.swing.JSeparator jSeparator1;
    private com.dsms.ui.components.SidePaneJbutton loginBtn;
    private com.dsms.ui.components.SidePaneJbutton myAccountBtn;
    private com.dsms.ui.components.SidePaneJbutton ordersBtn;
    private com.dsms.ui.components.SidePaneJbutton wishlistBtn;
    // End of variables declaration//GEN-END:variables

    private class UserEventListnerImpl implements UserEventListner {

        @Override
        public void onEvent(EventObject eventObject) {
            if (!(eventObject instanceof UserActionEvent)) {
                log.info("unknown event, {}", eventObject);
            }
            UserActionEvent userActionEvent = (UserActionEvent) eventObject;
            switch (userActionEvent.getEventType()) {
                case LOGIN:
                    handleUserLoginEvent();
                    break;
                case LOGOUT:
                    handleUserLogoutEvent();
                    break;
            }
        }
    }

    private void handleUserLoginEvent() {
        loginBtn.setText("Logout");
        setButtons();
    }

    private void handleUserLogoutEvent() {
        loginBtn.setText("Login");
        setButtons();
    }

    private void setButtons() {
         UserController userController = ContextProvider.getBean(UserController.class);
        UserType userType = userController.getLoggedInUserType();

        remove(homeBtn);
        remove(loginBtn);
        remove(myAccountBtn);
        remove(wishlistBtn);
        remove(ordersBtn);
        remove(contactUsBtn);
        remove(aboutUsBtn);
        if (userController.isUserLoggedIn()) {

            switch (userType) {

                case ADMIN:
                    add(homeBtn);
                    add(loginBtn);
                    add(myAccountBtn);
                    add(contactUsBtn);
                    add(aboutUsBtn);
                    break;
                case CUSTOMER:
                default:
                    add(homeBtn);
                    add(loginBtn);
                    add(myAccountBtn);
                    add(wishlistBtn);
                    add(ordersBtn);
                    add(contactUsBtn);
                    add(aboutUsBtn);
                    break;

            }
        } else {
            add(homeBtn);
            add(loginBtn);
            add(myAccountBtn);
            add(wishlistBtn);
            add(ordersBtn);
            add(contactUsBtn);
            add(aboutUsBtn);
        }
    }
}
